// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$stars-00-name: 'stars-00';
$stars-00-x: 0px;
$stars-00-y: 11px;
$stars-00-offset-x: 0px;
$stars-00-offset-y: -11px;
$stars-00-width: 55px;
$stars-00-height: 11px;
$stars-00-total-width: 110px;
$stars-00-total-height: 66px;
$stars-00-image: '../../../src/assets/icon/sprite.png';
$stars-00: (0px, 11px, 0px, -11px, 55px, 11px, 110px, 66px, '../../../src/assets/icon/sprite.png', 'stars-00', );
$stars-05-name: 'stars-05';
$stars-05-x: 55px;
$stars-05-y: 0px;
$stars-05-offset-x: -55px;
$stars-05-offset-y: 0px;
$stars-05-width: 55px;
$stars-05-height: 11px;
$stars-05-total-width: 110px;
$stars-05-total-height: 66px;
$stars-05-image: '../../../src/assets/icon/sprite.png';
$stars-05: (55px, 0px, -55px, 0px, 55px, 11px, 110px, 66px, '../../../src/assets/icon/sprite.png', 'stars-05', );
$stars-10-name: 'stars-10';
$stars-10-x: 0px;
$stars-10-y: 22px;
$stars-10-offset-x: 0px;
$stars-10-offset-y: -22px;
$stars-10-width: 55px;
$stars-10-height: 11px;
$stars-10-total-width: 110px;
$stars-10-total-height: 66px;
$stars-10-image: '../../../src/assets/icon/sprite.png';
$stars-10: (0px, 22px, 0px, -22px, 55px, 11px, 110px, 66px, '../../../src/assets/icon/sprite.png', 'stars-10', );
$stars-15-name: 'stars-15';
$stars-15-x: 0px;
$stars-15-y: 33px;
$stars-15-offset-x: 0px;
$stars-15-offset-y: -33px;
$stars-15-width: 55px;
$stars-15-height: 11px;
$stars-15-total-width: 110px;
$stars-15-total-height: 66px;
$stars-15-image: '../../../src/assets/icon/sprite.png';
$stars-15: (0px, 33px, 0px, -33px, 55px, 11px, 110px, 66px, '../../../src/assets/icon/sprite.png', 'stars-15', );
$stars-20-name: 'stars-20';
$stars-20-x: 0px;
$stars-20-y: 44px;
$stars-20-offset-x: 0px;
$stars-20-offset-y: -44px;
$stars-20-width: 55px;
$stars-20-height: 11px;
$stars-20-total-width: 110px;
$stars-20-total-height: 66px;
$stars-20-image: '../../../src/assets/icon/sprite.png';
$stars-20: (0px, 44px, 0px, -44px, 55px, 11px, 110px, 66px, '../../../src/assets/icon/sprite.png', 'stars-20', );
$stars-25-name: 'stars-25';
$stars-25-x: 0px;
$stars-25-y: 0px;
$stars-25-offset-x: 0px;
$stars-25-offset-y: 0px;
$stars-25-width: 55px;
$stars-25-height: 11px;
$stars-25-total-width: 110px;
$stars-25-total-height: 66px;
$stars-25-image: '../../../src/assets/icon/sprite.png';
$stars-25: (0px, 0px, 0px, 0px, 55px, 11px, 110px, 66px, '../../../src/assets/icon/sprite.png', 'stars-25', );
$stars-30-name: 'stars-30';
$stars-30-x: 55px;
$stars-30-y: 11px;
$stars-30-offset-x: -55px;
$stars-30-offset-y: -11px;
$stars-30-width: 55px;
$stars-30-height: 11px;
$stars-30-total-width: 110px;
$stars-30-total-height: 66px;
$stars-30-image: '../../../src/assets/icon/sprite.png';
$stars-30: (55px, 11px, -55px, -11px, 55px, 11px, 110px, 66px, '../../../src/assets/icon/sprite.png', 'stars-30', );
$stars-35-name: 'stars-35';
$stars-35-x: 55px;
$stars-35-y: 22px;
$stars-35-offset-x: -55px;
$stars-35-offset-y: -22px;
$stars-35-width: 55px;
$stars-35-height: 11px;
$stars-35-total-width: 110px;
$stars-35-total-height: 66px;
$stars-35-image: '../../../src/assets/icon/sprite.png';
$stars-35: (55px, 22px, -55px, -22px, 55px, 11px, 110px, 66px, '../../../src/assets/icon/sprite.png', 'stars-35', );
$stars-40-name: 'stars-40';
$stars-40-x: 55px;
$stars-40-y: 33px;
$stars-40-offset-x: -55px;
$stars-40-offset-y: -33px;
$stars-40-width: 55px;
$stars-40-height: 11px;
$stars-40-total-width: 110px;
$stars-40-total-height: 66px;
$stars-40-image: '../../../src/assets/icon/sprite.png';
$stars-40: (55px, 33px, -55px, -33px, 55px, 11px, 110px, 66px, '../../../src/assets/icon/sprite.png', 'stars-40', );
$stars-45-name: 'stars-45';
$stars-45-x: 55px;
$stars-45-y: 44px;
$stars-45-offset-x: -55px;
$stars-45-offset-y: -44px;
$stars-45-width: 55px;
$stars-45-height: 11px;
$stars-45-total-width: 110px;
$stars-45-total-height: 66px;
$stars-45-image: '../../../src/assets/icon/sprite.png';
$stars-45: (55px, 44px, -55px, -44px, 55px, 11px, 110px, 66px, '../../../src/assets/icon/sprite.png', 'stars-45', );
$stars-50-name: 'stars-50';
$stars-50-x: 0px;
$stars-50-y: 55px;
$stars-50-offset-x: 0px;
$stars-50-offset-y: -55px;
$stars-50-width: 55px;
$stars-50-height: 11px;
$stars-50-total-width: 110px;
$stars-50-total-height: 66px;
$stars-50-image: '../../../src/assets/icon/sprite.png';
$stars-50: (0px, 55px, 0px, -55px, 55px, 11px, 110px, 66px, '../../../src/assets/icon/sprite.png', 'stars-50', );
$spritesheet-width: 110px;
$spritesheet-height: 66px;
$spritesheet-image: '../../../src/assets/icon/sprite.png';
$spritesheet-sprites: ($stars-00, $stars-05, $stars-10, $stars-15, $stars-20, $stars-25, $stars-30, $stars-35, $stars-40, $stars-45, $stars-50, );
$spritesheet: (110px, 66px, '../../../src/assets/icon/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
